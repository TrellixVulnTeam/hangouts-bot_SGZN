specific things
    - make the prestige stuff a new file
    - get all the old handler stuff out of rpg handler
    - only handler and bot should be able to send stuff to hangouts
        everything else should go through handler (see how i did 2048 for an example)
    - i left u a few comments about variables u never use, plz check if u actually need those
    - learn git (this is a nice website for basics, i can send u some ebooks too http://think-like-a-git.net/)
    - user class in rpg

coding style
    - write shorter functions where possible (RPGHandler.atk is too long)
    - use formatted strings instead of concatenating
    - don't mix responsibilities between files and classes
    - if u reuse an expression (like that nonsense for hp in the rpg)
        save it into a variable, then assign that variable to the thing u need to change when ur done
    - don't use except unless u specify an error
    - if u print out an error message, be specific
    - add comments now and then. if u r busy, add it when ur done with a feature
    - docstrings are nice too, add those
    - theres often an obvious way to make things simplier if u use a long if elif chain
    - in classes, there are 4 places variables can go
        - passed in as an argument: things that change each time u call it
        - inside of the class: things which are always the same and/or universal
        - defined in __init__ as an attribute of self: things which are specific to each object
        - defined inside a function: temporary variable u need for that function only
            OR that u also need to pass as an argument to another function
    - dont async def functions that dont need to be concurrent
    - dont abbreviate unless its really long, its not worth it
    - avoid global variables if possible, most things u think should be global can be in a class



    picky things that keep popping up in flake8 (optional, but appreciated)
        - spaces around operators, always
            unless its assigning a keyword argument
                yes: function(keyword=value)
                no: function(keyword = value)
        - 2 spaces before inline comment
            yes: code  # comment
            no: code # comment OR code# comment OR code #comment
        - when u have a long line so u continue it indent once from the start of the line, not the bracket
            yes(
                all the stuff
            )
            nononnoonnoonononnonononononononononononono(
                                                        all the stuff
            )

other
    - push whenever it works, pull after u push (this reduces merge conflicts)

never forget
    multiplier = random.choice((1, -1))
    damage_taken += multiplier * math.sqrt(damage_dealt / 2)
    vs
    if random.randint(0, 1):
        damage_dealt += math.sqrt(damage_dealt/2)
    else:
        damage_dealt -= math.sqrt(damage_dealt/2)
